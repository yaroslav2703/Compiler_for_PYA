#pragma once
namespace FST
{
	struct RELATION				//ребро:символ->вершина графа переходов КА
	{
		wchar_t symbol;			//символ перехода
		short nnode;			//номер смежной вершины куда перейдёт
		RELATION(wchar_t, short);	//символ перехода, новое состояние
	};
	struct NODE					//вершина графа переходов
	{
		short n_relation;		//количество инциндентных ребер
		RELATION *relations;	//инциндентные ребра
		NODE();
		NODE(short n, RELATION rel, ...);  //количество инциндентных ребер, список ребер
	};
	struct FST   //недетерминированный конечный автомат
	{
		wchar_t* string; //цепочка(строка, завершается 0х00)
		short position; //текущая позиция в цепочке
		short nstates; //количество состояний автомата
		NODE* nodes; //граф переходов:[0]-начальное состояние, [nstate-1]-конечное
		short* rstates; //возможные состояния автомата на данной позиции
		FST(wchar_t* s, short ns, NODE n, ...); //цепочка(строка, завершается 0х00), количество состояний автомата, список состояний(граф переходов)
		FST(short ns, NODE n, ...); //		для массива					, количество состояний автомата, список состояний(граф переходов)
		FST(wchar_t* s, FST&); //				для лексич разбора			, количество состояний автомата, список состояний(граф переходов)

	};
	bool execute(FST &fst, int length); //выполнить распознование цепочки, недетерминированный конечный автомат

}